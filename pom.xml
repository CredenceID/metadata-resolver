<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <repositories>
        <repository>
            <id>danubetech-maven-public</id>
            <url>https://repo.danubetech.com/repository/maven-public/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springboot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <springboot.version>3.3.1</springboot.version>
        <springdoc-openapi-ui.version>1.7.0</springdoc-openapi-ui.version>
    </properties>

    <groupId>com.credenceid</groupId>
    <artifactId>metadata-resolver</artifactId>
    <version>0.2.0</version>
    <packaging>jar</packaging>

    <name>Metadata Resolver</name>
    <description>A application to resolve the did, verify the status and to verify whether the issuer is a trusted
        issuer of the verifiable credentials
    </description>
    <url>https://github.com/CredenceID/metadata-resolver</url>


    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Nagabhushan Srinivasa</name>
            <email>nagabhushan.srinivasa@credenceid.com</email>
            <organization>CredenceId</organization>
            <organizationUrl>https://www.credenceid.com</organizationUrl>
        </developer>
        <developer>
            <name>Rohith Gour</name>
            <email>rohith.gour@credenceid.com</email>
            <organization>CredenceId</organization>
            <organizationUrl>https://www.credenceid.com</organizationUrl>
        </developer>
        <developer>
            <name>Dhanush Raj G P</name>
            <email>dhanush.raj@credenceid.com</email>
            <organization>CredenceId</organization>
            <organizationUrl>https://www.credenceid.com</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/CredenceID/metadata-resolver.git</connection>
        <developerConnection>scm:git:ssh://github.com:CredenceID/metadata-resolver.git</developerConnection>
        <url>http://github.com/CredenceID/metadata-resolver/tree/master</url>
    </scm>

    <dependencies>
        <dependency>
            <groupId>com.credenceid</groupId>
            <artifactId>vc-status-verifier</artifactId>
            <version>0.1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.credenceid</groupId>
            <artifactId>web-did-resolver</artifactId>
            <version>0.1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

        <!-- openAPI dependencies-->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi-ui.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.6</version>
        </dependency>


        <!-- DIF -->
        <dependency>
            <groupId>decentralized-identity</groupId>
            <artifactId>uni-resolver-core</artifactId>
            <version>0.20.0</version>
        </dependency>
        <dependency>
            <groupId>decentralized-identity</groupId>
            <artifactId>did-common-java</artifactId>
            <version>1.13.0</version>
        </dependency>
        <dependency>
            <groupId>com.danubetech</groupId>
            <artifactId>verifiable-credentials-java</artifactId>
            <version>1.12.0</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${springboot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.7.0</version>
                <executions>
                    <execution>
                        <id>resolver</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/openapi/openapi.yaml
                            </inputSpec>
                            <skipValidateSpec>true</skipValidateSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>com.credenceid.resolver.openapi.api</apiPackage>
                            <modelPackage>com.credenceid.resolver.openapi.model</modelPackage>
                            <supportingFilesToGenerate>
                                ApiUtil.java
                            </supportingFilesToGenerate>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                                <useTags>true</useTags>
                                <delegatePattern>true</delegatePattern>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>trusted-issuer-registry</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/openapi/trusted-issuer-registry.yaml
                            </inputSpec>
                            <skipValidateSpec>true</skipValidateSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>com.credenceid.resolver.registry.openapi.api</apiPackage>
                            <modelPackage>com.credenceid.resolver.registry.openapi.model</modelPackage>
                            <supportingFilesToGenerate>
                                ApiUtil.java
                            </supportingFilesToGenerate>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                                <useTags>true</useTags>
                                <delegatePattern>true</delegatePattern>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>bitstring-status-list</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/openapi/status-list.yaml
                            </inputSpec>
                            <skipValidateSpec>true</skipValidateSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>com.credenceid.resolver.statuslist.openapi.api</apiPackage>
                            <modelPackage>com.credenceid.resolver.statuslist.openapi.model</modelPackage>
                            <supportingFilesToGenerate>
                                ApiUtil.java
                            </supportingFilesToGenerate>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                                <useTags>true</useTags>
                                <delegatePattern>true</delegatePattern>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.3.1</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            maven central publish plugin-->
            <!--            Javadoc and Sources Attachments-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--        Maven GPG plugin is used to sign the components    -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--            Publishing via the Central Portal -->
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.6.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>central</publishingServerId>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
